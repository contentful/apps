service: sls-apps-google-analytics-4

frameworkVersion: '>=3.0.0 <4.0.0'

plugins:
  - serverless-domain-manager
  - serverless-offline
  - serverless-prune-plugin

custom:
  sentryDSN: https://b8f524eae7c446fb8071476431426640@o2239.ingest.sentry.io/4504725335834624
  signingSecret: ${file(./config/serverless-env.${opt:stage, 'dev'}.yml):signingSecret}
  customDomain:
    domainName: ${file(./config/serverless-env.${opt:stage, 'dev'}.yml):domainName}
    stage: ${opt:stage, 'dev'}
    createRoute53Record: true
    endpointType: 'edge'
    securityPolicy: tls_1_2
  serverless-offline:
    httpPort: 8080
    host: 0.0.0.0
  awsRegion: us-east-1
  dynamoDbTableName: sls-apps-ga4-backend-${opt:stage, 'dev'}-service-account-keys
  dynamoDbEndpoint: ${file(./config/serverless-env.${opt:stage, 'dev'}.yml):dynamoDbEndpoint}
  serviceAccountKeyEncryptionSecret: ${file(./config/serverless-env.${opt:stage, 'dev'}.yml):serviceAccountKeyEncryptionSecret}
  prune:
    automatic: true
    number: 3

provider:
  name: aws
  runtime: nodejs18.x
  stage: ${opt:stage, 'dev'}
  region: ${self:custom.awsRegion}
  timeout: 30
  deploymentBucket:
    name: cf-apps-serverless-deployment
  deploymentPrefix: sls-apps-google-analytics-4
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [ServiceAccountKeysTable, Arn]

functions:
  api:
    description: GA4 App Backend
    environment:
      SIGNING_SECRET: ${self:custom.signingSecret}
      SENTRY_DSN: ${self:custom.sentryDSN}
      STAGE: ${opt:stage, 'dev'}
      NODE_ENV: ${env:NODE_ENV, 'development'}
      RELEASE_VERSION: ${env:CIRCLE_SHA1, 'undefined'}
      DYNAMODB_ENDPOINT: ${self:custom.dynamoDbEndpoint}
      DYNAMODB_TABLE_NAME: ${self:custom.dynamoDbTableName}
      SERVICE_ACCOUNT_KEY_ENCRYPTION_SECRET: ${self:custom.serviceAccountKeyEncryptionSecret}
    handler: build/src/index.handler
    events:
      - http:
          path: /{any+}
          method: ANY

resources:
  Resources:
    ServiceAccountKeysTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.dynamoDbTableName}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
