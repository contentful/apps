import { vi } from 'vitest';

const mockSdk: any = {
  app: {
    onConfigure: vi.fn(),
    getParameters: vi.fn().mockReturnValueOnce({}),
    setReady: vi.fn(),
    getCurrentState: vi.fn(),
  },
  notifier: {
    error: vi.fn(),
  },
  ids: {
    app: 'test-app',
  },
  dialogs: {
    openCurrentApp: vi.fn(),
  },
  navigator: {
    openCurrentAppPage: vi.fn(),
  },
  entry: {
    fields: [
      {
        id: 'title',
        name: 'Title',
        type: 'Symbol',
        locales: ['en-US'],
        required: false,
        validations: [],
        disabled: false,
        omitted: false,
        linkType: undefined,
        items: undefined,
      },
      {
        id: 'description',
        name: 'Description',
        type: 'Text',
        locales: ['en-US', 'es-AR'],
        required: false,
        validations: [],
        disabled: false,
        omitted: false,
        linkType: undefined,
        items: undefined,
      },
      {
        id: 'image',
        name: 'Image',
        type: 'Link',
        locales: ['en-US'],
        required: false,
        validations: [],
        disabled: false,
        omitted: false,
        linkType: 'Asset',
        items: undefined,
      },
      {
        id: 'tags',
        name: 'Tags',
        type: 'Array',
        locales: ['en-US'],
        required: false,
        validations: [],
        disabled: false,
        omitted: false,
        linkType: undefined,
        items: {
          type: 'Symbol',
          linkType: undefined,
        },
      },
      {
        id: 'boolean',
        name: 'Boolean',
        type: 'Boolean',
        locales: ['en-US'],
        required: false,
        validations: [],
        disabled: false,
        omitted: false,
        linkType: undefined,
        items: undefined,
      },
      {
        id: 'author',
        name: 'Author',
        type: 'Link',
        locales: ['en-US'],
        required: false,
        validations: [],
        disabled: false,
        omitted: false,
        linkType: 'Entry',
        items: undefined,
      },
    ],
  },
};

export const expectedFields = [
  {
    type: 'Symbol',
    id: 'title',
    uniqueId: 'title',
    name: 'Title',
    supported: true,
  },
  {
    type: 'Text',
    id: 'description',
    uniqueId: 'description-en-US',
    name: 'Description',
    locale: 'en-US',
    supported: true,
  },
  {
    type: 'Text',
    id: 'description',
    uniqueId: 'description-es-AR',
    name: 'Description',
    locale: 'es-AR',
    supported: true,
  },
  {
    type: 'Link',
    id: 'image',
    uniqueId: 'image',
    name: 'Image',
    linkType: 'Asset',
    supported: true,
  },
  {
    type: 'Array',
    id: 'tags',
    uniqueId: 'tags',
    name: 'Tags',
    items: { type: 'Symbol', linkType: undefined },
    supported: true,
  },
  {
    type: 'Boolean',
    id: 'boolean',
    uniqueId: 'boolean',
    name: 'Boolean',
    supported: false,
  },
  {
    type: 'Link',
    id: 'author',
    uniqueId: 'author',
    name: 'Author',
    linkType: 'Entry',
    supported: false,
  },
];

export { mockSdk };
