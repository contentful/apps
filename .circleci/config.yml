version: 2.1

orbs:
  node: circleci/node@5.0.2

commands:
  publish:
    steps:
      - run:
          name: Setup NPM
          command: |
            echo $'@contentful:registry=https://registry.npmjs.org/
            //registry.npmjs.org/:_authToken=${NPM_TOKEN}' >> ~/.npmrc
      - run: git config --global user.email "prd-dev-workflows+ecosystem-bot@contentful.com"
      - run: git config --global user.name "contentful-ecosystem-bot"
      - run:
          name: Publish packages
          command: npm run publish-packages

  deploy:
    steps:
      - run:
          name: Install awscli
          command: |
            sudo apt-get update
            sudo apt-get install python3-pip python3-dev
            sudo pip3 install awscli
      - run:
          name: Deploy apps to test
          command: |
            STATIC_S3_BASE="s3://cf-apps-static-dev/apps-test-$CIRCLE_SHA1" \
                STATIC_JIRA_S3_BASE="s3://cf-apps-static-dev/apps-test-$CIRCLE_SHA1/jira" \
                STAGE='test' npm run deploy:test
      - run:
          name: Deploy apps to prod
          command: |
            STATIC_S3_BASE="s3://cf-apps-static/apps" \
                STATIC_JIRA_S3_BASE="s3://cf-apps-jira" \
                STAGE='prd' npm run deploy

jobs:
  apps:
    docker:
      - image: cimg/base:stable
    resource_class: medium+
    steps:
      - checkout
      - node/install
      - run:
          name: Install dependencies
          command: |
            npm i
            npm run bootstrap:ci
      - run:
          name: Lint
          command: npm run lint
      - run:
          name: Build
          command: npm run build
      - run:
          name: Test
          command: npm run test
      - run:
          name: Exit successfully if not in master
          command: |
            if [ "$CIRCLE_BRANCH" != "master" ]; then
                circleci-agent step halt
            fi
      - publish
      - deploy

  test-ts-example:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - node/install
      - run:
          name: Install dependencies
          command: cd examples/typescript && npm i
      - run:
          name: Build
          command: cd examples/typescript && npm run build
      - run:
          name: Test
          command: cd examples/typescript && npm run test

  test-js-example:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - node/install
      - run:
          name: Install dependencies
          command: cd examples/javascript && npm i
      - run:
          name: Build
          command: cd examples/javascript && npm run build
      - run:
          name: Test
          command: cd examples/javascript && npm run test

workflows:
  version: 2
  test-deploy:
    jobs:
      - apps
      - test-ts-example
      - test-js-example
